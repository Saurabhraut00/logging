import pandas as pd
import db
import logging
from logging.handlers import TimedRotatingFileHandler
import os
import datetime


logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)


log_dir = 'logs'
os.makedirs(log_dir, exist_ok=True)

production_handler = logging.FileHandler(os.path.join(log_dir, 'production.log'))
production_handler.setLevel(logging.ERROR)
production_formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
production_handler.setFormatter(production_formatter)
logger.addHandler(production_handler)

# Debug log handler
debug_handler = logging.FileHandler(os.path.join(log_dir, 'debug.log'))
debug_handler.setLevel(logging.DEBUG)
debug_formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
debug_handler.setFormatter(debug_formatter)
logger.addHandler(debug_handler)

server_handler = logging.FileHandler(os.path.join(log_dir, 'server.log'))
server_handler.setLevel(logging.INFO)
server_formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
server_handler.setFormatter(server_formatter)
logger.addHandler(server_handler)


current_date = datetime.datetime.now().strftime("%Y-%m-%d")
file_handler = TimedRotatingFileHandler(
    os.path.join(log_dir, f'TEFS_koating_{current_date}.log'),
    when='midnight',
    interval=1,
    backupCount=1,
    encoding='utf-8'
)
file_handler.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
file_handler.setFormatter(formatter)
logger.addHandler(file_handler)
